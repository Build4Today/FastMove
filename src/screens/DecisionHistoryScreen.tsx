import React, { useEffect, useState } from "react";
import { Box, FlatList, VStack, Text, Heading } from "native-base";
import { getDecisions } from "../services/decision.service";
import { Decision } from "../types/decision.type";

export const DecisionHistoryScreen = () => {
  const [decisions, setDecisions] = useState<Decision[]>([]);

  useEffect(() => {
    fetchDecisions();
  }, []);

  const fetchDecisions = async () => {
    try {
      const storedDecisions = await getDecisions();
      setDecisions(storedDecisions);
    } catch (error) {
      console.error("Error fetching decisions:", error);
    }
  };

  const renderDecisionItem = ({ item }: { item: Decision }) => (
    <Box borderWidth={1} borderColor="gray.300" p={4} my={2}>
      <Text fontSize="lg">User Details: {item.userDetails}</Text>
      <Text fontSize="lg">User Needs: {item.userNeeds}</Text>
      <Text fontSize="lg">Decision A: {item.decisionA}</Text>
      <Text fontSize="lg">Decision B: {item.decisionB}</Text>
      <Text fontSize="lg">Final Decision: {item.finalDecision}</Text>
      <Text fontSize="lg">Tags: {item.tags}</Text>
      <Text fontSize="lg">Auto-generated Title: {item.autoGeneratedAiTitle}</Text>
    </Box>
  );

  return (
    <VStack p={4} space={4}>
      <Heading fontSize="2xl">Decision History</Heading>
      <FlatList data={decisions} renderItem={renderDecisionItem} keyExtractor={(item, index) => index.toString()} />
    </VStack>
  );
};
